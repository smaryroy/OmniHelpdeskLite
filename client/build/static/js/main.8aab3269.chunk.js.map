{"version":3,"sources":["assets/img/omnihelp_bnr300px.png","utils/API.js","components/TicketPage/index.js","components/Sitebar/index.js","components/AppButton/index.js","components/LoginPage/index.js","components/SignupPage/index.js","components/TicketEdit/index.js","App.js","index.js"],"names":["module","exports","axios","get","id","sub","params","cat","ticketData","post","put","TicketPage","props","state","tickets","searchValue","this","isLoggedIn","loadTickets","gotoLogin","e","preventDefault","setState","queryTickets","API","then","res","Array","isArray","data","catch","err","console","log","status","Container","fluid","Row","Col","sm","className","onClick","handleSearchChange","Button","variant","to","getByStatus","length","ListGroup","map","ticket","Item","key","_id","Card","Body","Title","title","Text","priority","description","category","subCategory","statusStr","React","Component","Navbar","logout","src","logo","alt","AppButton","handleSubmit","type","btnType","label","LoginForm","handleChange","updateUser","target","name","value","event","username","password","response","message","gotoMain","error","bind","md","onSubmit","class","role","htmlFor","placeholder","onChange","SignUpPage","useState","setTicket","useParams","fieldName","fleldVal","newTicket","requestedBy","requestedDate","technician","closedDate","comments","useEffect","loadTicket","Form","Group","as","controlId","Label","Control","defaultValue","App","ticketId","updatedProp","update","prevState","updateTicketId","getUser","user","history","push","Sitebar","exact","path","render","openDetail","TicketEdit","LoginPage","withRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8aab3269.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/omnihelp_bnr300px.50695910.png\";","import axios from \"axios\";\n\nexport default {\n  // Gets all tickets\n  getTickets: function () {\n    // console.log(\"in api.js\");\n    return axios.get(\"/api/tickets\");\n  },\n  getByStatus: function (id) {\n    return axios.get(\"/api/tickets/status/\" + id);\n  },\n  getByCategory: function (id) {\n    //console.log(\"in getByCategory\", id);\n    return axios.get(\"/api/tickets/category/\" + id);\n  },\n  getByCategorySub: function (id, sub) {\n    // console.log(\"in getByCategorySub\", id, sub);\n    return axios.get(\"/api/tickets/category/\" + id + \"/subcategory/\" + sub, {\n      params: { cat: id, sub: sub },\n    });\n  },\n  // Gets the ticket with the given id\n  getTicket: function (id) {\n    return axios.get(\"/api/tickets/\" + id);\n  },\n  // Deletes the ticket with the given id\n  deleteTicket: function (id) {\n    return axios.delete(\"/api/tickets/\" + id);\n  },\n  // Saves a new  ticket to the database\n  createTicket: function (ticketData) {\n    //console.log(\"in createTicket\");\n    return axios.post(\"/api/tickets\", ticketData);\n  },\n  // updates a  ticket to the database\n  updateTicket: function (id, ticketData) {\n    //console.log(\"in updateTicket\");\n    return axios.put(\"/api/tickets/\" + id, ticketData);\n  },\n};\n","import React from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./style.css\";\r\n\r\nclass TicketPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tickets: [],\r\n      searchValue: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.isLoggedIn) {\r\n      this.loadTickets();\r\n    } else {\r\n      this.props.gotoLogin();\r\n    }\r\n  }\r\n\r\n  handleSearchChange(cat, sub, e) {\r\n    e.preventDefault();\r\n    this.setState({ searchValue: cat + \";\" + sub });\r\n    this.queryTickets(cat, sub);\r\n  }\r\n\r\n  // Loads all tickets and sets them to tickets\r\n  loadTickets() {\r\n    API.getTickets()\r\n      .then((res) => {\r\n        if (Array.isArray(res.data)) {\r\n          this.setState({ tickets: res.data });\r\n        } else {\r\n          this.setState({ tickets: [] });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  getByStatus(id) {\r\n    API.getByStatus(id)\r\n      .then((res) => {\r\n        if (Array.isArray(res.data)) {\r\n          this.setState({ tickets: res.data });\r\n        } else {\r\n          this.setState({ tickets: [] });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  queryTickets(cat, sub) {\r\n    //console.log(\"queryTickets\", cat, sub);\r\n    const id = cat;\r\n    if (!sub) {\r\n      API.getByCategory(id)\r\n        .then((res) => {\r\n          if (Array.isArray(res.data)) {\r\n            this.setState({ tickets: res.data });\r\n          } else {\r\n            this.setState({ tickets: [] });\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      API.getByCategorySub(cat, sub)\r\n        .then((res) => {\r\n          if (Array.isArray(res.data)) {\r\n            this.setState({ tickets: res.data });\r\n          } else {\r\n            this.setState({ tickets: [] });\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n  statusStr(status) {\r\n    if (status === 1) {\r\n      return \"New\";\r\n    } else if (status === 2) {\r\n      return \"In Progress\";\r\n    } else if (status === 3) {\r\n      return \"Closed\";\r\n    } else {\r\n      return \"Closed\";\r\n    }\r\n  }\r\n\r\n  // Deletes a ticket from the database with a given id, then reloads tickets from the db\r\n  // function deleteTicket(id) {\r\n  //   API.deleteTicket(id)\r\n  //     .then((res) => loadTickets())\r\n  //     .catch((err) => console.log(err));\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <Col sm={3} className=\"catMenu\">\r\n            <h6 className=\"sub-header\">Categories</h6>\r\n            <ul>\r\n              <li>\r\n                <button\r\n                  className=\"catItem\"\r\n                  onClick={(e) => this.handleSearchChange(\"General\", \"\", e)}\r\n                >\r\n                  General\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className=\"catItem\"\r\n                  onClick={(e) => this.handleSearchChange(\"Security\", \"\", e)}\r\n                >\r\n                  Security\r\n                </button>\r\n\r\n                <ul>\r\n                  <li>\r\n                    <button\r\n                      className=\"catItem\"\r\n                      onClick={(e) =>\r\n                        this.handleSearchChange(\"Security\", \"User Access\", e)\r\n                      }\r\n                    >\r\n                      User Access\r\n                    </button>\r\n                  </li>\r\n                  <li>\r\n                    <button\r\n                      className=\"catItem\"\r\n                      onClick={(e) =>\r\n                        this.handleSearchChange(\"Security\", \"Permissions\", e)\r\n                      }\r\n                    >\r\n                      Permissions\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className=\"catItem\"\r\n                  onClick={(e) => this.handleSearchChange(\"Software\", \"\", e)}\r\n                >\r\n                  Software\r\n                </button>\r\n                <ul>\r\n                  <li>\r\n                    <button\r\n                      className=\"catItem\"\r\n                      onClick={(e) =>\r\n                        this.handleSearchChange(\"Software\", \"Installations\", e)\r\n                      }\r\n                    >\r\n                      Installations\r\n                    </button>\r\n                  </li>\r\n                  <li>\r\n                    <button\r\n                      className=\"catItem\"\r\n                      onClick={(e) =>\r\n                        this.handleSearchChange(\"Software\", \"Bugs\", e)\r\n                      }\r\n                    >\r\n                      Bugs\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className=\"catItem\"\r\n                  onClick={(e) => this.handleSearchChange(\"Hardware\", \"\", e)}\r\n                >\r\n                  Hardware\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </Col>\r\n          <Col>\r\n            <Row>\r\n              <Col sm={3}>\r\n                <h4 className=\"sub-header\">Tickets</h4>\r\n              </Col>\r\n              <Col className=\"just-right\">\r\n                <Button variant=\"primary\">\r\n                  <Link className=\"return-link\" to=\"/newticket\">\r\n                    Open New Ticket\r\n                  </Link>\r\n                </Button>\r\n                {/* <div className=\"dropdown\">\r\n                  <button className=\"dropbtn\">Sort By</button>\r\n                  <div className=\"dropdown-content\">\r\n                    <p>\r\n                      {\" \"}\r\n                      <button\r\n                        className=\"catItem\"\r\n                        onClick={(e) => this.handleSortChange(\"priority\", e)}\r\n                      >\r\n                        Priority\r\n                      </button>\r\n                    </p>\r\n                    <p>\r\n                      <button\r\n                        className=\"catItem\"\r\n                        onClick={(e) => this.handleSortChange(\"status\", e)}\r\n                      >\r\n                        Status\r\n                      </button>\r\n                    </p>\r\n                    <p>\r\n                      <button\r\n                        className=\"catItem\"\r\n                        onClick={(e) =>\r\n                          this.handleSortChange(\"requestedDate\", e)\r\n                        }\r\n                      >\r\n                        Request Date\r\n                      </button>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n               */}\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row className=\"aln-left\">\r\n              <Col sm={4}>\r\n                <button className=\"catItem\" onClick={() => this.getByStatus(1)}>\r\n                  Open\r\n                </button>\r\n              </Col>\r\n              <Col sm={4}>\r\n                <button className=\"catItem\" onClick={() => this.getByStatus(2)}>\r\n                  In Progress\r\n                </button>\r\n              </Col>\r\n              <Col sm={4}>\r\n                <button className=\"catItem\" onClick={() => this.loadTickets()}>\r\n                  All\r\n                </button>\r\n              </Col>\r\n              <Col></Col>\r\n            </Row>\r\n            <Row>\r\n              <Col sm={12}>\r\n                {this.state.tickets.length ? (\r\n                  <div className=\"scroll-div\">\r\n                    <ListGroup className=\"ticket-list\">\r\n                      {this.state.tickets.map((ticket) => (\r\n                        <ListGroup.Item\r\n                          className=\"mycard-item\"\r\n                          key={ticket._id}\r\n                        >\r\n                          <Card>\r\n                            <Card.Body className=\"mycard\">\r\n                              <Row>\r\n                                <Col>\r\n                                  <Card.Title className=\"mycard-title\">\r\n                                    {ticket.title}\r\n                                  </Card.Title>\r\n                                </Col>\r\n                                <Col>\r\n                                  <Card.Text className=\"mycard-text aln-right\">\r\n                                    {\"Priority:  \" + ticket.priority}\r\n                                  </Card.Text>\r\n                                </Col>\r\n                              </Row>\r\n                              <Row>\r\n                                <Col sm={8}>\r\n                                  <Card.Text>{ticket.description}</Card.Text>\r\n                                </Col>\r\n                                <Col className=\"aln-right\">\r\n                                  <Link\r\n                                    className=\"detail-link\"\r\n                                    to={\"/tickets/\" + ticket._id}\r\n                                  >\r\n                                    See Details\r\n                                  </Link>\r\n                                </Col>\r\n                              </Row>\r\n                              <Row>\r\n                                <Col>Category: {ticket.category}</Col>\r\n                                <Col> {ticket.subCategory}</Col>\r\n                                <Col className=\"aln-right\">\r\n                                  Status: {this.statusStr(ticket.status)}\r\n                                </Col>\r\n                              </Row>\r\n                            </Card.Body>\r\n                          </Card>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  </div>\r\n                ) : (\r\n                  <h3>No Results to Display</h3>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TicketPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/img/omnihelp_bnr300px.png\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"navbar App-header\" id=\"nav-container\">\r\n        <div className=\"left-pad-small\">\r\n          {this.props.isLoggedIn ? (\r\n            <section className=\"navbar-section\">\r\n              <Link\r\n                to=\"#\"\r\n                className=\"btn btn-link text-secondary\"\r\n                onClick={() => this.props.logout()}\r\n              >\r\n                <span className=\"blue-text\">Log Out</span>\r\n              </Link>\r\n            </section>\r\n          ) : (\r\n            <section className=\"navbar-section\">\r\n              <Link to=\"/login\" className=\"btn btn-link text-secondary\">\r\n                <span className=\"blue-text\">Log In</span>\r\n              </Link>\r\n              <Link to=\"/signup\" className=\"btn btn-link text-secondary\">\r\n                <span className=\"blue-text\">Sign Up</span>\r\n              </Link>\r\n            </section>\r\n          )}\r\n        </div>\r\n        <div className=\"col-4 col-mr-auto\">\r\n          <div id=\"top-filler\"></div>\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction AppButton(props) {\r\n  return (\r\n    <button\r\n      className=\"btn appBtn \"\r\n      onClick={props.handleSubmit}\r\n      type={props.btnType}\r\n    >\r\n      {props.label}\r\n    </button>\r\n  );\r\n}\r\nexport default AppButton;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport AppButton from \"../AppButton\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\n\r\nclass LoginForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.props.updateUser(e.target.name, e.target.value);\r\n    const state = this.state;\r\n    state[e.target.name] = e.target.value;\r\n    this.setState(state);\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { username, password } = this.state;\r\n    axios\r\n      .post(\"/auth/login\", { username, password })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.setState({ message: \"\" });\r\n          this.props.updateUser(\"isLoggedIn\", \"true\");\r\n          this.props.gotoMain();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"login error\", error);\r\n        this.setState({ message: \"Login failed: \" + error });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { username, password, message } = this.state;\r\n    return (\r\n      <Container className=\"myform\">\r\n        <Row>\r\n          <Col md={3}></Col>\r\n          <Col md={6}>\r\n            <h4>Login</h4>\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n              {message !== \"\" && (\r\n                <div class=\"alert alert-warning alert-dismissible\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group\">\r\n                <div className=\"col-1 col-ml-auto\">\r\n                  <label className=\"form-label\" htmlFor=\"username\">\r\n                    Username\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-3 col-mr-auto\">\r\n                  <input\r\n                    className=\"form-input\"\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    placeholder=\"username\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <div className=\"col-1 col-ml-auto\">\r\n                  <label className=\"form-label\" htmlFor=\"password\">\r\n                    Password:{\" \"}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-3 col-mr-auto\">\r\n                  <input\r\n                    className=\"form-input\"\r\n                    placeholder=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group \">\r\n                <AppButton btnType=\"submit\" label=\"Login\"></AppButton>\r\n              </div>\r\n            </form>\r\n          </Col>\r\n          <Col md={3}></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport AppButton from \"../AppButton\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\n\r\nclass SignUpPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.props.updateUser(e.target.name, e.target.value);\r\n    const state = this.state;\r\n    state[e.target.name] = e.target.value;\r\n    this.setState(state);\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { username, password } = this.state;\r\n    axios\r\n      .post(\"/auth/signup\", { username, password })\r\n      .then((response) => {\r\n        //console.log(response);\r\n        if (response.status === 200) {\r\n          //console.log(\"reg success\");\r\n          this.setState({ message: \"\" });\r\n          this.props.updateUser(\"isLoggedIn\", \"true\");\r\n          this.props.gotoMain();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        //console.log(\"register error\", error);\r\n        this.setState({ message: \"Registration failed: \" + error });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { username, password, message } = this.state;\r\n    return (\r\n      <Container className=\"myform\">\r\n        <Row>\r\n          <Col md={3}></Col>\r\n          <Col md={6}>\r\n            <h4>Sign Up</h4>\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n              {message !== \"\" && (\r\n                <div class=\"alert alert-warning alert-dismissible\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              )}\r\n              <div className=\"form-group\">\r\n                <div className=\"col-1 col-ml-auto\">\r\n                  <label className=\"form-label\" htmlFor=\"username\">\r\n                    Username\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-3 col-mr-auto\">\r\n                  <input\r\n                    className=\"form-input\"\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    placeholder=\"username\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <div className=\"col-1 col-ml-auto\">\r\n                  <label className=\"form-label\" htmlFor=\"password\">\r\n                    Password:{\" \"}\r\n                  </label>\r\n                </div>\r\n                <div className=\"col-3 col-mr-auto\">\r\n                  <input\r\n                    className=\"form-input\"\r\n                    placeholder=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group \">\r\n                <AppButton btnType=\"submit\" label=\"Register\"></AppButton>\r\n              </div>\r\n            </form>\r\n          </Col>\r\n          <Col md={2}></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport API from \"../../utils/API\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./style.css\";\r\n\r\nfunction TicketPage(props) {\r\n  const [ticket, setTicket] = useState({});\r\n\r\n  // When this component mounts, grab the book with the _id of props.match.params.id\r\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    //console.log(props);\r\n    if (props.isLoggedIn) {\r\n      loadTicket(id);\r\n    } else {\r\n      props.gotoLogin();\r\n    }\r\n    // loadTicket(id);\r\n  }, []);\r\n\r\n  function loadTicket(id) {\r\n    //console.log(\"in loadTicket\", id);\r\n    if (!id) return;\r\n    API.getTicket(id)\r\n      .then((res) => setTicket(res.data))\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleChange(e) {\r\n    let fieldName = e.target.name;\r\n    let fleldVal = e.target.value;\r\n    //console.log(\"change\", fieldName, fleldVal);\r\n    ticket[fieldName] = fleldVal;\r\n    const newTicket = {\r\n      _id: ticket._id ? ticket._id : null,\r\n      title: ticket.title ? ticket.title : \"\",\r\n      description: ticket.description ? ticket.description : \"\",\r\n      priority: ticket.priority ? ticket.priority : 1,\r\n      status: ticket.status ? ticket.status : 1,\r\n      requestedBy: ticket.requestedBy ? ticket.requestedBy : \"me\",\r\n      requestedDate: ticket.requestedDate,\r\n      category: ticket.category ? ticket.category : \"General\",\r\n      subCategory: ticket.subCategory,\r\n      technician: ticket.technician,\r\n      closedDate: ticket.closedDate,\r\n      comments: ticket.comments,\r\n    };\r\n    setTicket(newTicket);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    //console.log(\"saving\", ticket);\r\n    if (ticket._id) {\r\n      API.updateTicket(ticket._id, ticket)\r\n        .then((res) => setTicket({ tickets: res.data }))\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      delete ticket._id;\r\n      API.createTicket(ticket)\r\n        .then((res) => setTicket({ tickets: res.data }))\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Button variant=\"primary\">\r\n        <Link className=\"return-link\" to=\"/tickets\">\r\n          Back To Tickets{\" \"}\r\n        </Link>\r\n      </Button>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridTitle\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"title\"\r\n                  name=\"title\"\r\n                  value={ticket.title}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"3\" controlId=\"formGridStatus\">\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  defaultValue=\"New\"\r\n                  name=\"status\"\r\n                  value={ticket.status}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"1\">New</option>\r\n                  <option value=\"2\">In Progress</option>\r\n                  <option value=\"3\">Closed</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formGridBy\">\r\n                <Form.Label>Requested By</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"requestedBy\"\r\n                  name=\"requestedBy\"\r\n                  value={ticket.requestedBy}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} md=\"4\" controlId=\"formGridCategory\">\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  defaultValue=\"General\"\r\n                  name=\"category\"\r\n                  value={ticket.category}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option>General</option>\r\n                  <option>Security</option>\r\n                  <option>Software</option>\r\n                  <option>Hardware</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} md=\"2\" controlId=\"formGridPriority\">\r\n                <Form.Label>Priority</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  defaultValue=\"High\"\r\n                  name=\"priority\"\r\n                  value={ticket.priority}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"1\">High</option>\r\n                  <option value=\"2\">Medium</option>\r\n                  <option value=\"3\">Low</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"formGridDescription\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"description\"\r\n                name=\"description\"\r\n                value={ticket.description}\r\n                onChange={handleChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Row>\r\n              {/* <Form.Group as={Col} controlId=\"formGridSub\">\r\n                <Form.Label>Subcategory</Form.Label>\r\n                <Form.Control />\r\n              </Form.Group> */}\r\n              <Form.Group as={Col} controlId=\"formGridComments\">\r\n                <Form.Label>Comments</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"comments\"\r\n                  name=\"comments\"\r\n                  value={ticket.comments}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Button className=\"save-btn\" variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\nexport default TicketPage;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\nimport TicketPage from \"./components/TicketPage\";\r\nimport Sitebar from \"./components/Sitebar\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport Signup from \"./components/SignupPage\";\r\nimport TicketEdit from \"./components/TicketEdit\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isLoggedIn: false,\r\n    username: null,\r\n    password: null,\r\n    ticketId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUser();\r\n  }\r\n\r\n  updateUser = (updatedProp, update) => {\r\n    this.setState((prevState) => ({ ...prevState, [updatedProp]: update }));\r\n  };\r\n\r\n  updateTicketId = (updatedProp, update) => {\r\n    //console.log(\"updateticketid\", updatedProp, update);\r\n    this.setState((prevState) => ({ ...prevState, [updatedProp]: update }));\r\n    //console.log(this.state.ticketId);\r\n  };\r\n\r\n  getUser = () => {\r\n    //console.log(\"in getUser\");\r\n    axios.get(\"/user\").then((response) => {\r\n      if (response.data.user) {\r\n        this.setState({\r\n          isLoggedIn: true,\r\n          username: response.data.user.username,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  gotoMain = () => {\r\n    //console.log(\"in gotomain\", this.state);\r\n    this.props.history.push(\"/tickets\");\r\n  };\r\n\r\n  gotoLogin = () => {\r\n    //console.log(\"in gotoLogin\", this.state);\r\n    this.props.history.push(\"/login\");\r\n  };\r\n\r\n  logout = () => {\r\n    //console.log(\"in logout\");\r\n    axios\r\n      .post(\"/auth/logout\")\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.setState({\r\n            isLoggedIn: false,\r\n            username: null,\r\n            password: null,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"logout error\", error);\r\n      });\r\n    this.props.history.push(\"/login\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Sitebar isLoggedIn={this.state.isLoggedIn} logout={this.logout} />\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/tickets\"\r\n            render={() => (\r\n              <TicketPage\r\n                isLoggedIn={this.state.isLoggedIn}\r\n                username={this.state.username}\r\n                gotoLogin={this.gotoLogin}\r\n                openDetail={this.openDetail}\r\n                updateTicketId={this.updateTicketId}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/tickets/:id\"\r\n            render={() => (\r\n              <TicketEdit\r\n                isLoggedIn={this.state.isLoggedIn}\r\n                gotoLogin={this.gotoLogin}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/newticket\"\r\n            render={() => (\r\n              <TicketEdit\r\n                isLoggedIn={this.state.isLoggedIn}\r\n                gotoLogin={this.gotoLogin}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => (\r\n              <LoginPage\r\n                updateUser={this.updateUser}\r\n                gotoMain={this.gotoMain}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/login\"\r\n            render={() => (\r\n              <LoginPage\r\n                username={this.state.username}\r\n                updateUser={this.updateUser}\r\n                gotoMain={this.gotoMain}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/signup\"\r\n            render={() => (\r\n              <Signup\r\n                username={this.state.username}\r\n                updateUser={this.updateUser}\r\n                gotoMain={this.gotoMain}\r\n              />\r\n            )}\r\n          />\r\n          {/* <Route\r\n            path=\"/page\"\r\n            render={() => (\r\n              <Page\r\n                isLoggedIn={this.state.isLoggedIn}\r\n                username={this.state.username}\r\n              />\r\n            )}\r\n          /> */}\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\"; //don't need to specify localhost url in axios http address\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}